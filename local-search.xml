<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Do you really know the difference between == and .equals?</title>
    <link href="/2021/01/10/Do-you-really-know-the-difference-between-and-equals/"/>
    <url>/2021/01/10/Do-you-really-know-the-difference-between-and-equals/</url>
    
    <content type="html"><![CDATA[<blockquote><p>the difference between == and .equals is commonly asked in tests and interviews. heres a brife explanation of the differences between them. </p></blockquote><a id="more"></a><p>A common misunderstanding is that, == compares the value for primitive types and the address for the reference types, but equals only compare the value. But thats not the case with java, as for why its incorrect, just keep reading, and you’ll find your answer.</p><h2 id="What-does-do"><a href="#What-does-do" class="headerlink" title="What does == do?"></a>What does <code>==</code> do?</h2><p><code>==</code> acts differently on different types, heres an example</p><p>On primitive types, <code>==</code> would always work properly</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">int</span> nice = <span class="hljs-number">69</span>;<br><span class="hljs-keyword">int</span> veryNice = <span class="hljs-number">69</span>;<br>System.out.println(nice == veryNice); <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p>On reference types, it acts a bit differently, it would compare the address of the object instead of the value, therefore comparing two objects with the same value would return false.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">String nice = <span class="hljs-string">&quot;NICE&quot;</span>;<br>String veryNice = <span class="hljs-string">&quot;NICE&quot;</span>;<br>System.out.println(nice == veryNice); <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p><em>Wait what?</em> Shouldn’t it return false since they are both reference types? </p><p>Well, they are indeed reference types, but when you declare the strings without using new, you’ll get a reference to a single <code>String</code> instance. This is because string literals in java will be interned if they are the same, which means that both variables have reference to the same thing.</p><p>Now Let’s try it with the <code>new</code> operator</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">String nice = <span class="hljs-keyword">new</span> String(<span class="hljs-string">&quot;NICE&quot;</span>);<br>String veryNice = <span class="hljs-keyword">new</span> String(<span class="hljs-string">&quot;NICE&quot;</span>);<br>System.out.println(nice == veryNice); <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p>Ah yes, it’s finally false.</p><p>Now you can see how <code>==</code> returns false, even though they contain the same value, they are still different objects, which have a different reference. So, when <code>==</code> tries to compare them, it would return false because they have different references. </p><p>not finished smh</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2020, And Some Thoughts On 2021</title>
    <link href="/2021/01/01/2020-And-Some-Thoughts-On-2021/"/>
    <url>/2021/01/01/2020-And-Some-Thoughts-On-2021/</url>
    
    <content type="html"><![CDATA[<blockquote><p>just some thoughts on 2020, didn’t write as much blog as I wanted, but here’s a short blog looking back at what I did</p></blockquote><a id="more"></a><h2 id="My-thoughts-on-2020"><a href="#My-thoughts-on-2020" class="headerlink" title="My thoughts on 2020"></a>My thoughts on 2020</h2><p>2020 might be the longest year ever, now it has finally ended. </p><p>To the world, 2020 was catastrophic, until now, the pandemic is still affecting this world.</p><p>To me, 2020 was still better than last year, it gave me the chance to learn better things.</p><h2 id="How-I-feel-about-2020"><a href="#How-I-feel-about-2020" class="headerlink" title="How I feel about 2020"></a>How I feel about 2020</h2><p>A word to describe 2020 would be “unexpected”, COVID-19 have greatly impacted the whole world. There was so much pressure in 2020, remote learning was weird, cockboard’s reaction to ap tests was wild.</p><p>Even tho 2020 was an unexpected year, I still find joy in doing things I like, watching anime and writing coding makes me feel relieved from this pandemic.</p><h2 id="Things-I-did-in-2020"><a href="#Things-I-did-in-2020" class="headerlink" title="Things I did in 2020"></a>Things I did in 2020</h2><p>(not in order)</p><ul><li>discovered the joy of hosting things urself</li><li>absolutely in love with Linux</li><li>got deeper into 3d printing</li><li>did some 3d modeling &amp; designs</li><li>made something with javascript</li><li>joined an FTC team</li><li>made myself more organized</li><li>went back to watching anime</li><li>attended a few hackathons</li><li>met some wonderful wonderful people</li><li>made a blog </li><li>made an anime list</li><li>tried out spring boot</li><li>tried out some DevOps tools</li></ul><h2 id="Few-things-I’ve-learned"><a href="#Few-things-I’ve-learned" class="headerlink" title="Few things I’ve learned"></a>Few things I’ve learned</h2><h4 id="chaos-is-a-ladder"><a href="#chaos-is-a-ladder" class="headerlink" title="chaos is a ladder"></a>chaos is a ladder</h4><p>This is a quote from the game of thrones, 2020 was chaotic, I didn’t use this chance to do something for myself, should’ve learned some math and physics, maybe grind more java or something. Even though many things failed in 2020, things like streaming and online meeting have thrived. There are always chances in situations like this, it solely depends on what you do with them. </p><h4 id="Know-your-limits"><a href="#Know-your-limits" class="headerlink" title="Know your limits"></a>Know your limits</h4><p>My plans for this year were disastrous, took 3 AP classes with a hard AP, planned so many projects that I cant finish, was elected for president for one of the clubs, wrote a bucketload of emails. This is not me being negative about my life, this is just me being self-aware. luckily, I still have years to correct this, I hope next year won’t be as chaotic as this year. </p><h4 id="My-life-is-to-myself"><a href="#My-life-is-to-myself" class="headerlink" title="My life is to myself"></a>My life is to myself</h4><p>As another year approaches, I’m closer and closer to college, no one can help me anymore, being an adult means more responsibility and less stupidity. So far, I don’t think I can qualify as an adult, maybe it’ll change in 2020, who knows. </p><h2 id="Thoughts-on-2021"><a href="#Thoughts-on-2021" class="headerlink" title="Thoughts on 2021"></a>Thoughts on 2021</h2><p>I don’t think 2021 will get any better, at least for this world. I hope that I’ll become an adult soon, hope my grandparents are safe, hope my family could get along, and hope 2021 could be normal.</p><h2 id="Some-goals-for-2021"><a href="#Some-goals-for-2021" class="headerlink" title="Some goals for 2021"></a>Some goals for 2021</h2><ul><li>try out a new language/technology</li><li>get better grades</li><li>have a larger project</li></ul><p>2021 would be another busy year, hope you have a great 2021!</p><p>Btw, i, simp for Rio Futaba.</p><p>By vincent<br>EOF</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AP java - De Morgan&#39;s Laws</title>
    <link href="/2020/11/21/AP-java-De-Morgan-s-Laws/"/>
    <url>/2020/11/21/AP-java-De-Morgan-s-Laws/</url>
    
    <content type="html"><![CDATA[<blockquote><p>The famous De Morgan’s laws was developed by Augustus De Morgan in the 1800s, he was a indian born mathmatician and logician. And heres how the law applies in java</p></blockquote><a id="more"></a><h1 id="De-Morgan’s-Laws"><a href="#De-Morgan’s-Laws" class="headerlink" title="De Morgan’s Laws"></a>De Morgan’s Laws</h1><h3 id="Distrubuting-the-NOT-operator"><a href="#Distrubuting-the-NOT-operator" class="headerlink" title="Distrubuting the ! (NOT) operator"></a>Distrubuting the <code>!</code> (NOT) operator</h3><p>TL;DR</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">&amp;&amp; becomes ||<br>|| becomes &amp;&amp;<br>&lt; becomes &gt;=<br>&gt; becomes &lt;=<br>&lt;= becomes &gt;<br>&gt;= becomes &lt;<br><span class="hljs-section">== becomes !=</span><br>!= becomes ==<br></code></pre></td></tr></table></figure><h4 id="AND-amp-OR-operators"><a href="#AND-amp-OR-operators" class="headerlink" title="AND &amp; OR operators"></a>AND &amp; OR operators</h4><hr><p>Here’s an example:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">!<span class="hljs-comment">(A &amp;&amp; B)</span><br></code></pre></td></tr></table></figure><p>According to De Morgan’s law, it’s the same as the following.</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!A || !B<br></code></pre></td></tr></table></figure><p>Remember that you’ll have to change it from OR to AND to make this true</p><h4 id="Bigger-than-amp-smaller-than"><a href="#Bigger-than-amp-smaller-than" class="headerlink" title="Bigger than &amp; smaller than"></a>Bigger than &amp; smaller than</h4><hr><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">!<span class="hljs-comment">(A &gt; B)</span><br></code></pre></td></tr></table></figure><p>According to De Morgan’s law, it’s the same as the following.</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-keyword">A</span> &lt;= B<br></code></pre></td></tr></table></figure><p>Note that the <code>!</code> operator made the sign inclusive, since <code>&gt;</code> is exclusive.</p><h4 id="Double-equals"><a href="#Double-equals" class="headerlink" title="Double equals"></a>Double equals</h4><hr><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">!<span class="hljs-comment">(A == B)</span><br></code></pre></td></tr></table></figure><p>this one should be pretty obvious and simple</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-keyword">A</span> != b<br></code></pre></td></tr></table></figure><p>the opposite of <code>==</code> would be <code>!=</code></p><h3 id="In-the-context-of-java"><a href="#In-the-context-of-java" class="headerlink" title="In the context of java"></a>In the context of java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DeMorgan</span></span><br><span class="hljs-class"></span>&#123;<br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span><br><span class="hljs-function">   </span>&#123;<br>     <span class="hljs-keyword">int</span> x = <span class="hljs-number">6</span>;<br>     <span class="hljs-keyword">int</span> y = <span class="hljs-number">9</span>; <span class="hljs-comment">//very nice haha so funny</span><br>     System.out.println(!((x &lt; <span class="hljs-number">9</span>) &amp;&amp; y &gt; <span class="hljs-number">6</span>));<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Let’s take a look at the logic part</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">!<span class="hljs-comment">((x &lt; 9)</span> &amp;&amp; <span class="hljs-comment">(y &gt; 6)</span>)<br></code></pre></td></tr></table></figure><p>Using De Morgan’s laws, it would be the same as the following</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!(x &lt; <span class="hljs-number">9</span>) || !(y &gt; <span class="hljs-number">6</span>)<br></code></pre></td></tr></table></figure><p>Now, apply the laws on them</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">x</span> &gt;= <span class="hljs-number">9</span> || y &lt;= <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><p>After that, plug in the values for each variables</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">int</span> x = <span class="hljs-number">6</span>;<br><span class="hljs-keyword">int</span> y = <span class="hljs-number">9</span>; <span class="hljs-comment">//very nice haha so funny</span><br>System.out.println(x &gt;= <span class="hljs-number">9</span> || y &lt;= <span class="hljs-number">6</span>);<br></code></pre></td></tr></table></figure><p>Since x is not bigger or equal to 9, or y is smaller or equal to 6, the answer should yield <code>false</code> </p><p>Let’s try running it</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">false<br><br>Process finished with <span class="hljs-keyword">exit</span> code <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>EOF<br>icanc.space</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>deploying a minecraft server with docker</title>
    <link href="/2020/11/21/deploying-a-minecraft-server-with-docker/"/>
    <url>/2020/11/21/deploying-a-minecraft-server-with-docker/</url>
    
    <content type="html"><![CDATA[<blockquote><p>This guide will help you go through the process of installing a Minecraft server on a raspberry pi. It works across all platforms and has support for server types</p></blockquote><a id="more"></a><h2 id="Deploying-a-Minecraft-server-with-docker"><a href="#Deploying-a-Minecraft-server-with-docker" class="headerlink" title="Deploying a Minecraft server with docker"></a>Deploying a Minecraft server with docker</h2><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>For those people that hate docker,<br>you can follow this guide: <a href="https://pimylifeup.com/raspberry-pi-minecraft-server/">https://pimylifeup.com/raspberry-pi-minecraft-server/</a></p><p>But why docker?</p><ol><li>no need to install java and mess with JRE</li><li>automation with docker is much easier</li><li>fast deployments</li></ol><h3 id="Setting-up-docker"><a href="#Setting-up-docker" class="headerlink" title="Setting up docker"></a>Setting up docker</h3><p>For arch-based distros</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo pacman -S docker</span><br></code></pre></td></tr></table></figure><p>For Debian based distros</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> docker<br></code></pre></td></tr></table></figure><h3 id="Installing-Minecraft-docker"><a href="#Installing-Minecraft-docker" class="headerlink" title="Installing Minecraft docker"></a>Installing Minecraft docker</h3><p>tl;dr:<br>Copy the command and connect through port 25565 a few min later</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo docker <span class="hljs-builtin-name">run</span> -d -it -e <span class="hljs-attribute">EULA</span>=<span class="hljs-literal">TRUE</span> -e <span class="hljs-attribute">VERSION</span>=1.16.1 -e <span class="hljs-attribute">TYPE</span>=paper  -p 25565:25565 --name minecraft-server itzg/minecraft-server:multiarch<br></code></pre></td></tr></table></figure><p>Note: ARM-based board like the raspberry pi requires the multi-arch tag. This command will also not mount the volumes, look at the mounting volumes section for help</p><p>Why you SHOULD use docker for this</p><ol><li>easy management through a web interface using Portainer.</li><li>want to start a server in seconds</li><li>less hassle with managing ports</li></ol><p>Why you SHOULDN’T use docker for this</p><ol><li>pushing you pi for absolute performance.</li><li>no other reason why you wouldn’t want to use docker.</li></ol><h3 id="How-to-mount-paths-in-docker"><a href="#How-to-mount-paths-in-docker" class="headerlink" title="How to mount paths in docker"></a>How to mount paths in docker</h3><p>If nothing is mounted, docker will create a docker volume and its hard to migrate.</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">minecraft</span><br>├── config<br>├── <span class="hljs-class"><span class="hljs-keyword">data</span></span><br>└── mods<br></code></pre></td></tr></table></figure><p>This docker image requires 3 mount points without installing external mod packs</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sudo docker run -d -it -e EULA=<span class="hljs-keyword">TRUE</span> -e VERSION=<span class="hljs-number">1.16</span>.<span class="hljs-number">1</span> -e TYPE=paper -p <span class="hljs-number">25565</span>:<span class="hljs-number">25565</span> -v <span class="hljs-regexp">/home/u</span>sername<span class="hljs-regexp">/minecraft/</span>config:<span class="hljs-regexp">/config -v /</span>home<span class="hljs-regexp">/username/mi</span>necraft<span class="hljs-regexp">/data:/</span>data -v <span class="hljs-regexp">/home/u</span>sername<span class="hljs-regexp">/minecraft/m</span>ods:<span class="hljs-regexp">/mods --name mc-container-name itzg/mi</span>necraft-server:multiarch<br></code></pre></td></tr></table></figure><p>Using the <code>-v</code> argument, you can mount the path inside of docker, and u can access the server files outside of docker. but you do need to restart the container every time u make changes.</p><p>not finished</p><p>icanc.space<br>EOF</p>]]></content>
    
    
    <categories>
      
      <category>minercaft</category>
      
      <category>docker</category>
      
      <category>server-stuff</category>
      
    </categories>
    
    
    <tags>
      
      <tag>minecraft</tag>
      
      <tag>server</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
